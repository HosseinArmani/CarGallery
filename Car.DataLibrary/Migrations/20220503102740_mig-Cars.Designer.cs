// <auto-generated />
using Car.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Car.DataLayer.Migrations
{
    [DbContext(typeof(CarGalleryContext))]
    [Migration("20220503102740_mig-Cars")]
    partial class migCars
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Car.DataLayer.Entities.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CarBodyId")
                        .HasColumnType("int");

                    b.Property<int>("CarEngineId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CarId");

                    b.HasIndex("CarBodyId");

                    b.HasIndex("CarEngineId");

                    b.HasIndex("GroupId");

                    b.HasIndex("PriceId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.CarBodyInformation", b =>
                {
                    b.Property<int>("CarBodyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DoorsCount")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("CarBodyId");

                    b.ToTable("CarBodyInformations");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.CarEngineInformation", b =>
                {
                    b.Property<int>("CarEnginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EngineDisplacement")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EngineType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SoupapeCount")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("cylindersCount")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("CarEnginId");

                    b.ToTable("CarEngineInformations");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.CarGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TitleGroup")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("GroupId");

                    b.ToTable("CarGroups");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.CarPrice", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PrimeCost")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<int>("SalesPrice")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.HasKey("PriceId");

                    b.ToTable("CarPrices");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.Car", b =>
                {
                    b.HasOne("Car.DataLayer.Entities.CarBodyInformation", "CarBodyInformation")
                        .WithMany("Cars")
                        .HasForeignKey("CarBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Car.DataLayer.Entities.CarEngineInformation", "CarEngineInformation")
                        .WithMany("Cars")
                        .HasForeignKey("CarEngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Car.DataLayer.Entities.CarGroup", "CarGroup")
                        .WithMany("Cars")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Car.DataLayer.Entities.CarPrice", "CarPrice")
                        .WithMany("Cars")
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBodyInformation");

                    b.Navigation("CarEngineInformation");

                    b.Navigation("CarGroup");

                    b.Navigation("CarPrice");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.CarBodyInformation", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.CarEngineInformation", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.CarGroup", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Car.DataLayer.Entities.CarPrice", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
